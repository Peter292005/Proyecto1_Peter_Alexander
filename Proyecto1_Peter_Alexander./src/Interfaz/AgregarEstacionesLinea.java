/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import EstructurasDatos.ListaSimple;
import EstructurasDatos.Vertice;
import static Interfaz.CargarRed.FuncionesApp;
import static Interfaz.CargarRed.redTransporte;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author mateusnaddaf
 */

public class AgregarEstacionesLinea extends javax.swing.JFrame {

    /**
     * Creates new form AgregarEstacionesLinea
     */
    DefaultListModel modelLinea = new DefaultListModel();
    private ListaSimple lineaNueva = new ListaSimple();
    public static ListaSimple verticesNuevos = new ListaSimple();

    public AgregarEstacionesLinea() {
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        modelLinea.removeAllElements();
        this.llenarLinea();
        this.agregarParadaLinea();
    }


    private void agregarParadaLinea() {
        if (!lineaNueva.esVacia()) {
            for (int i = 0; i < lineaNueva.getSize(); i++) {
                String nombre = (String) lineaNueva.getValor(i);
                modelLinea.addElement(nombre);
            }

        }
    }
    
    private void llenarLinea(){
        if(!verticesNuevos.esVacia()){
            for (int i = 0; i < verticesNuevos.getSize(); i++) {
                Vertice verticeAct = (Vertice) verticesNuevos.getValor(i);
                lineaNueva.insertarFinal(verticeAct.getParada().getNombre());
            }
        }
    }

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputParada = new javax.swing.JTextField();
        agregarParada = new javax.swing.JButton();
        siguienteConexion = new javax.swing.JButton();
        Volver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("Agregar Parada a la Linea Nueva");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel2.setText("Nombre de la nueva parada:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        jPanel1.add(inputParada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 170, -1));

        agregarParada.setText("Agregar ");
        agregarParada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarParadaActionPerformed(evt);
            }
        });
        jPanel1.add(agregarParada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        siguienteConexion.setText("Siguiente");
        siguienteConexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteConexionActionPerformed(evt);
            }
        });
        jPanel1.add(siguienteConexion, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, -1, 30));

        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });
        jPanel1.add(Volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 380, -1, -1));

        jList1.setModel(modelLinea);
        jScrollPane2.setViewportView(jList1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 180, 180));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarParadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarParadaActionPerformed
        if (!inputParada.getText().isEmpty()) {
            String nombreParada = inputParada.getText();
            if (redTransporte.buscarVerticePorNombre(nombreParada) == null) {
                lineaNueva.insertarFinal(nombreParada);
                inputParada.setText("");
                JOptionPane.showMessageDialog(null, "Parada agregada con exito a la Linea Nueva.");
                modelLinea.removeAllElements();
                this.agregarParadaLinea();
                
                
            } else {
                inputParada.setText("");
                JOptionPane.showMessageDialog(null, "Los nombres de Paradas deben ser unicos y ese nombre ya existe dentro de la Red.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El input esta vacio.");
        }
    }                                     

    private void volverMenuActionPerformed(java.awt.event.ActionEvent evt) {                                           
        AgregarLinea aggLinea = new AgregarLinea();
        this.dispose();
    }                                          

    private void siguienteAggConexionActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        FuncionesApp.conectarLinea(lineaNueva, verticesNuevos);
        AgregarConexion aggConexion = new AgregarConexion();
        this.dispose();
    }//GEN-LAST:event_agregarParadaActionPerformed

    private void siguienteConexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteConexionActionPerformed
        if (!lineaNueva.esVacia()) {
            FuncionesApp.conectarLinea(lineaNueva, verticesNuevos);
            AgregarConexion aggConexion = new AgregarConexion();
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(null, "Debes agregar al menos una estacion a la linea para continuar");
        }
    }//GEN-LAST:event_siguienteConexionActionPerformed

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        AgregarLinea aggLinea = new AgregarLinea();
        this.dispose();
    }//GEN-LAST:event_VolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarEstacionesLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarEstacionesLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarEstacionesLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarEstacionesLinea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarEstacionesLinea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Volver;
    private javax.swing.JButton agregarParada;
    private javax.swing.JTextField inputParada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton siguienteConexion;
    // End of variables declaration//GEN-END:variables
}
